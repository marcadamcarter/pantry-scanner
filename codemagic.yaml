workflows:
  pantryscanner_testflight:
    name: PantryScanner - TestFlight
    max_build_duration: 60

    integrations:
      # Must match Codemagic → Teams → Integrations
      app_store_connect: PantryScannerKey      

    environment:
      ios_signing:
        # Allowed: ad_hoc | app_store | development | enterprise
        distribution_type: app_store
        bundle_identifier: com.northpadreisles.PantryScanner
        
      vars:
        # Project & scheme based on your repo/logs
        XCODE_PROJECT: PantryScanner/Pantry.xcodeproj
        XCODE_SCHEME: SimpleNews
        BUNDLE_ID: com.northpadreisles.PantryScanner        
        PROFILE_NAME: PantryScanner_AppStore_Profile         # <-- exactly as shown in Codemagic UI

    scripts:
      - name: Install certs & profiles
        script: |
          set -e
          BUNDLE_ID="com.northpadreisles.PantryScanner"
          
          keychain initialize
          keychain add-certificates
          
          # Download (or create if missing) the App Store profile for this bundle id
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          
          # Install any uploaded provisioning profiles into the local build environment
          xcode-project use-profiles

      - name: Resolve provisioning profile UUID by name
        script: |
          set -e
          echo "Looking for profile named: $PROFILE_NAME"

          PROFILE_UUID=""
          for f in "$HOME/Library/MobileDevice/Provisioning Profiles/"*.mobileprovision; do
            [ -e "$f" ] || continue
            PLIST=$(mktemp)
            security cms -D -i "$f" > "$PLIST" 2>/dev/null || { rm -f "$PLIST"; continue; }
            NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name' "$PLIST" 2>/dev/null || echo "")
            UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' "$PLIST" 2>/dev/null || echo "")
            APPID=$(/usr/libexec/PlistBuddy -c 'Print :Entitlements:application-identifier' "$PLIST" 2>/dev/null || echo "")
            GETTASK=$(/usr/libexec/PlistBuddy -c 'Print :Entitlements:get-task-allow' "$PLIST" 2>/dev/null || echo "")
            rm -f "$PLIST"

            # Must be distribution (get-task-allow=false) and match your bundle id
            if [ "$NAME" = "$PROFILE_NAME" ] && [ "${APPID##*.}" = "com.northpadreisles.PantryScanner" ] && [ "$GETTASK" = "false" ]; then
              PROFILE_UUID="$UUID"
              break
            fi
          done
          
          echo "Found profile UUID: $PROFILE_UUID"

          if [ -z "$PROFILE_UUID" ]; then
            echo "❌ Could not find App Store profile named '$PROFILE_NAME' for com.northpadreisles.PantryScanner"
            echo "Make sure that exact profile exists in Codemagic → Teams → Code signing identities → iOS provisioning profiles."
            exit 1
          fi

          echo "Using provisioning profile:"
          echo "  Name: $PROFILE_NAME"
          echo "  UUID: $PROFILE_UUID"

          echo "PROVISIONING_PROFILE_SPECIFIER=$PROFILE_NAME" >> "$CM_ENV"
          echo "PROVISIONING_PROFILE=$PROFILE_UUID" >> "$CM_ENV"

      - name: Build IPA (force matching profile + identity + bundle id)
        script: |
          xcode-project build-ipa \
            --project "PantryScanner/Pantry.xcodeproj" \
            --scheme "SimpleNews" \
            --archive-xcargs "PRODUCT_BUNDLE_IDENTIFIER=com.northpadreisles.PantryScanner DEVELOPMENT_TEAM=R8R77PB278 CODE_SIGN_STYLE=Manual PROVISIONING_PROFILE_SPECIFIER='${PROVISIONING_PROFILE_SPECIFIER}' PROVISIONING_PROFILE='${PROVISIONING_PROFILE}' CODE_SIGN_IDENTITY='Apple Distribution'"

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
