workflows:
  pantryscanner_testflight:
    name: PantryScanner - TestFlight
    max_build_duration: 60

    # ⬇️ Make sure this matches the name of your App Store Connect integration in Codemagic
    integrations:
      app_store_connect: PantryScannerKey

    environment:
      ios_signing:
        # Allowed values: ad_hoc | app_store | development | enterprise
        distribution_type: app_store
        bundle_identifier: com.northpadreisles.PantryScanner
        # If you’re in multiple Apple teams, add the next line with your Team ID:
        # apple_team_id: R8R7RPBZ78
      vars:
        XCODE_PROJECT: PantryScanner/Pantry.xcodeproj     # <-- update to the real path if nested
        XCODE_SCHEME: SimpleNews                            # keep your scheme name
        BUNDLE_ID: com.northpadreisles.PantryScanner

    scripts:
      # ---------- 0) HELPER (Helps if paths are wrong) ----------
      - name: Locate Xcode project/workspace (deep)
        script: |
          echo "PWD: $(pwd)"
          echo "Searching for .xcodeproj / .xcworkspace anywhere…"
          find . -type d -name "*.xcodeproj" -print
          find . -type d -name "*.xcworkspace" -print
          echo "Top-level tree:"
          ls -la

      # ---------- 1) DIAGNOSTIC (lists what Codemagic can see) ----------
      - name: Diagnose signing inventory
        script: |
          echo "Listing Apple Distribution certs and App Store profiles for $BUNDLE_ID"
          app-store-connect list-certificates --type IOS_DISTRIBUTION || true
          app-store-connect list-profiles --bundle-id "$BUNDLE_ID" --type IOS_APP_STORE || true

      # ---------- 2) FETCH/CREATE PROFILE & CONFIGURE XCODE ----------
      - name: Prepare signing (fetch/create App Store profile)
        script: |
          keychain initialize
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain add-certificates
          xcode-project use-profiles

      # ---------- 3) BUILD ----------
      - name: Build IPA
        script: |
          echo "Using project: $XCODE_PROJECT"
          echo "Using scheme:  $XCODE_SCHEME"

          echo "Listing schemes to verify:"
          xcodebuild -list -project "$XCODE_PROJECT" || true

          xcode-project build-ipa \
            --project "$XCODE_PROJECT" \
            --scheme "$XCODE_SCHEME"

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        # beta_groups:
        #   - Internal Testers
